{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","enter","enterActive","exit","exitActive","Filters","titles","window","LMDirectory","updateName","evt","updateFormState","currentName","updateTitle","currentTitle","target","value","updateIntern","currentIntern","checked","resetFilters","isIntern","key","display","Directory","state","bind","spec","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  \"use strict\";\n\n  function Person(props) {\n    return (\n      <div className=\"person\">\n        <h3>\n          {props.person.name}, {props.person.title}\n        </h3>\n        <p>\n          <img\n            className=\"size-medium wp-image-14 alignright\"\n            src={props.person.img}\n            alt={props.person.name}\n            width=\"300\"\n            height=\"300\"\n            sizes=\"(max-width: 300px) 100vw, 300px\"\n          />\n          {props.person.bio}\n        </p>\n      </div>\n    );\n  }\n\n  function People(props) {\n    return (\n      <div className=\"result\">\n        <ReactTransitionGroup.TransitionGroup>\n          {props.people.map(person => {\n            return (\n              <ReactTransitionGroup.CSSTransition\n                key={person.id}\n                classNames={{\n                  enter: \"animated\",\n                  enterActive: \"zoomIn\",\n                  exit: \"animated\",\n                  exitActive: \"zoomOut\"\n                }}\n                timeout={1000}\n              >\n                <Person person={person} />\n              </ReactTransitionGroup.CSSTransition>\n            );\n          })}\n        </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  function Filters(props) {\n    var titles = window.LMDirectory.titles;\n\n    function updateName(evt) {\n      props.updateFormState({ currentName: \"\" });\n    }\n\n    function updateTitle(evt) {\n      props.updateFormState({ currentTitle: evt.target.value });\n    }\n\n    function updateIntern(evt) {\n      props.updateFormState({ currentIntern: evt.target.checked });\n    }\n\n    function resetFilters() {\n      props.updateFormState({\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      });\n    }\n\n    return (\n      <form action=\"\" id=\"directory-filters\">\n        <div className=\"group\">\n          <label htmlFor=\"person-name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"person_name\"\n            placeholder=\"Name of employee\"\n            id=\"person-name\"\n            value={props.currentName}\n            onChange={updateName}\n          />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"person-title\">Job Title:</label>\n          <select\n            name=\"person_title\"\n            id=\"person-title\"\n            value={props.currentTitle}\n            onChange={updateTitle}\n          >\n            <option value=\"\">- Select -</option>\n            {titles.map(title => {\n              return (\n                <option key={title.key} value={title.key}>\n                  {title.display}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"group\">\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"1\"\n              name=\"person_intern\"\n              checked={props.currentIntern}\n              onChange={updateIntern}\n            />\n            Intern\n          </label>\n        </div>\n        <div className=\"group\">\n          <input type=\"reset\" value=\"Reset\" onClick={resetFilters} />\n        </div>\n      </form>\n    );\n  }\n\n  class Directory extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      };\n      this.updateFormState = this.updateFormState.bind(this);\n    }\n\n    updateFormState(spec) {\n      this.setState(spec, this.updatePeopleList);\n    }\n\n    updatePeopleList() {\n      var filteredPeople = window.LMDirectory.people.filter(\n        function(person) {\n          return (\n            person.intern === this.state.isIntern &&\n            (this.state.currentName === \"\" ||\n              person.name\n                .toLowerCase()\n                .indexOf(this.state.currentName.toLowerCase()) !== -1) &&\n            (this.state.currentTitle === \"\" ||\n              person.title_cat === this.state.currentTitle)\n          );\n        }.bind(this)\n      );\n\n      this.setState({ people: filteredPeople });\n    }\n\n    render() {\n      return (\n        <div className=\"company-directory\">\n          <h2>Company Directory</h2>\n          <p>\n            Learn more about each person at Leaf & Mortar in this company\n            directory.\n          </p>\n          <Filters\n            currentName={this.state.currentName}\n            currentTitle={this.state.currentTitle}\n            isIntern={this.state.isIntern}\n            updateFormState={this.updateFormState}\n          />\n          <People people={this.state.people} />\n        </div>\n      );\n    }\n  }\n  ReactDOM.render(<Directory />, document.getElementById(\"directory-root\"));\n})();\n"]}